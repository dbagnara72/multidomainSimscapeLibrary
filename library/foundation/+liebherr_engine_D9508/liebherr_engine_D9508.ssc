component liebherr_engine_D9508
% Liebherr Engine D9508:2

inputs
    % Engine throttle
    tS = {0, '1'};                    % tS:left
end

outputs
    % Engine power
    Pe = {0, 'kW'};                     % Pe:right
    % Engine speed
    we = {0, 'rpm'};                    % we:right
    % Engine torque
    te = {0, 'N*m'};                    % te:right
    % Specific engine consumption
    sfc = {0, 'g/(kW*hr)'};                 % sfc:right    
    % Engine consumption
    fc = {0, 'l'};                      % fc:right    
end

nodes
   C = foundation.mechanical.rotational.rotational; % C:left
   D = foundation.mechanical.rotational.rotational; % D:right
end

parameters
    cshaft_inertia = { 5.00, 'kg*m^2' };                % System inertia
    initial_speed = { 5, '1' };                         % Initial speed (rpm)
    diesel_density = { 0.85, 'kg/l' };             % Diesel density speed
end

parameters(Access=private)     
    rpm_nom = {[-2100 -2000 -1900 -1800 -1700 -1600 -1500 -1400 -1300 -1200 ...
    -1100 -1000 -900 -800 -700 -600 600 700 800 900 1000 1100 1200 1300 ...
    1400 1500 1600 1700 1800 1900 2000 2100], 'rpm'};

    torque_fricion_nom = { [160 150 140 130 120 110 100 90 80 70 ...
    60 50 40 30 20 10 -10 -20 -30 -40 -50 -60 -70 ...
    -80 -90 -100 -110 -120 -130 -140 -150 -160], 'N*m'};

    torque_nom = { [-1952 -2237 -2523 -2641 -2809 -2994 -3002 -2992 -2985 -2981 ...
    -2678 -2306 -2052 -1871 -1593 -1419 1419 1593 1871 2052 2306 2678 2981 ...
    2985 2992 3002 2994 2809 2641 2523 2237 1952], 'N*m'};
    
    rpm_consumption = {[2100 2000 1900 1800 1700 1600 1500 1400 1300 1200 ...
    1100 1000 900 800 700 600], 'rpm'}; % input speed for engine consumption
    
    power_consumption = {[3000 2950 2750 2520 2280 2100 1890 1600 1400 1150 ...
    950 680 450 125], 'kW'}; % input power for engine consumption
    
    consumption = {[...
        250 240 235 224 222.8 223.9 223.3 225.2 227.8 233.8 241.8 260.2 294.7 380.7; ...
        235	224	222.8 223.9 217.9 217.6 217.8 218.7 220.6 225 232.2 249.3 278.6 350.4; ...
        235 224 222.8 215.9 215.3 214.3 213.8 214.3 215.4 218.8 225 238.2 259.4 335.3; ...
        222.8 223.9 217.9 211.2 210.5 209.5 209 209.8 211 213.8 219 229.5 246.8 327.8; ...
        217.9 211.2	210.5 207.8	206.5 205.7	205.7 205.7	207.4 208.5 214.7 223.7 240.7 305; ...
        208.6 205.9 205.3 203.9 203.1 202.4 202.2 203 204.1 205.2 208.5 217	231.4 283.4; ...
        205.9 202.1	201	199.9 199.6	199.3 199.9	200.5 201.2	204.8 211.5	224	271.9 678.7; ...
        200.2 200.1	199.4 198.7	198.6 197.9	197.7 198.2	199.6 202.8	207.1 218.2	254	603.8; ...
        198.1 198.1 197.7 196.9	197.1 196.9 197.1 197.7 198.8 200.9	205.2 215.5	245.1 574.4; ...
        196.8 196.8 196.8 196 195.4 195.5 196.9	197.7 198.1 199.3 204.1	212.9 239.9 505.4; ...
        210.1 208.6	197.2 196.8 196.3 196.5 196.9 197.3 199 199.8 203.3 209.2 235.5	414.3; ...
        214.6 210.1	208.6 198.9	198.7 199.1	198.6 197.9	199.2 200.2	201.2 206.5	232	340; ...
        223.9 214.6 210.1 208.6 204.8 203.1 202.7 200.8	199.4 200.5 201	205.1 222.9	318; ...
        235	224	222.8 223.9	214.6 210.1	208.6 204.8	202.7 201.3	201.4 206 220.9	298.7; ...
        250	240	235	224	222.8 223.9	214.6 211.8 207.7 203.5	203.8 206.1	220.1 277.3; ...
        300	280	250	240	235	224	222.8 223.9	214.2 208.5 206.5 207.2 222.6 286; ...
        ], 'g/(kW*hr)'}; % Engine consumption as function of speed and power

    wmax = {2400,'rpm'}                 % Maximum rotational speed
    a0 = {(2*pi*25)^2, '1/s^2'}         % Throttle model parameter wn^2
    a1 = {(4*pi*25), '1/s'}             % Throttle model parameter 2*zeta*wn
end

branches    
    t_out : D.t -> *;
    t_in: C.t -> *;
end

    variables(Access=private)
        w = {value = {initial_speed,'rpm'}, priority = priority.high}; % Rotational speed (rpm)
        y = { 0, '1' };                     % Input shaft torque after second order filter as model of the throttle
        x1 = { 0, 's^2' };                  % state variable of the second order filter as model of the throttle
        x2 = { 0, 's' };                    % state variable of the second order filter as model of the throttle
        t_in = { 0, 'N*m'};                 % Input shaft torque
        t_out = { 0, 'N*m' };               % Load shaft torque
        t_b = { 0, 'N*m' };                 % Friction torque
        throttle = { 0, '1'};               % Input shaft torque from engine map
    end
    
    equations
       % Torque limit extrapolation
       t_in == tablelookup(rpm_nom, torque_nom, w, interpolation = smooth, extrapolation = linear);
       t_b == tablelookup(rpm_nom, torque_fricion_nom, w, interpolation = smooth, extrapolation = linear);
       
       tS/100 == throttle;
       % throttle model as second order filter with delay
       x1.der == x2;
       x2.der == -a0 * x1 - a1 * x2 + (throttle);
       y == a0 * x1;

       % Physical equation 
       w == D.w - C.w;
       w.der*cshaft_inertia == t_in*y + t_out + t_b;
       
       % Outputs assignement
       te == (t_in*y + t_b);
       Pe == te * w;
       we == w;
%        sfc == tablelookup(power_consumption, rpm_consumption, consumption, Pe, w, ...
%            interpolation = smooth, extrapolation = linear);
       sfc == tablelookup(rpm_consumption, power_consumption, consumption, w, Pe, ...
           interpolation = smooth, extrapolation = linear);
       fc.der == Pe*sfc/diesel_density;
       assert(abs(w)<=wmax, 'Rotational speed surpassing the engine maximum', Action = simscape.enum.assert.action.warn);
    end

% annotations
%     Icon = 'Liebherr_Engine_D934.png';
% end

end
























