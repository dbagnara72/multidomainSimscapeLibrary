component fixed_displacement_motor
% Fixed displacement motor :


nodes
    C = foundation.mechanical.rotational.rotational; % C:right
    A = foundation.hydraulic.hydraulic; % A:left
    B = foundation.hydraulic.hydraulic; % B:left    
end

variables 
    t = { 0, 'N*m' };               % Torque through
    q = {0 , 'm^3/s'};              % Volumetric flow through A line
    qleak = {0 , 'm^3/s'};          % Volumetric flow leakage
    Dv = {0 , 'cm^3/rev'};          % Volumetric displacement
    dp = {0 ,'Pa'};                 % Delta Pressure
    wm = {0 ,'rad/s'};              % Rotor Speed
end

parameters
    max_Dv = {10, 'cm^3/rev'};                 % Maximum allowed volumetric displacement
    inertia_motor = {0.05, 'kg*m^2'};           % Mass moment of Inertia of rotating components
    oil_vol = {2.0, 'l'};                       % Oil volume
    bp = { 0.025, '(N*m)*s/rad' };                % Mechanical friction
    lk = { 6.85e-4, 'm' };                         % Flow leakage (orifice)
end

branches
    q: A.q -> B.q;
    t: C.t -> *;
end

equations
    let
        rho = A.density;
        bulk = A.bulk;
    in
        C.w == wm;
        B.p - A.p == dp;
        Dv == max_Dv;
        qleak == (lk)*lk*sqrt(2/rho)*sqrt(abs(dp))*sign(dp)
        wm.der == (t - dp*Dv - bp*wm) / inertia_motor; 
        dp.der*oil_vol/bulk/2 == wm*Dv -qleak -q ;
    end
end

% branches
%     q: B.q -> A.q;
%     t: C.t -> *;
% end
% 
% equations
%     let
%         rho = A.density;
%         bulk = A.bulk;
%     in
%         C.w == wm;
%         A.p - B.p == dp;
%         Dv == max_Dv;
%         qleak == (lk)*lk*sqrt(2/rho)*sqrt(abs(dp))*sign(dp)
%         wm.der == (t - dp*Dv - bp*wm) / inertia_motor; 
%         dp.der*oil_vol/bulk/2 == wm*Dv -qleak -q ;
%     end
% end

end
