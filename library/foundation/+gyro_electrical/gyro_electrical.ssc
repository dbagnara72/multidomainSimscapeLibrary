component gyro_electrical
% electrical gyro


    nodes
        uin_p = foundation.electrical.electrical; % uin_p:left
        uin_n = foundation.electrical.electrical; % uin_n:left
        uout_p = foundation.electrical.electrical; % uout_p:right
        uout_n = foundation.electrical.electrical; % uout_n:right
    end

    parameters
        scale = {1, '1'};          % scale
    end

    variables(Access = private)
        i_in = { 0, 'A' };               % i_in
        u_in = { 0, 'V' };               % u_in
        i_out = { 0, 'A' };              % i_out
        u_out = { 0, 'V' };              % u_out
    end

    branches
        i_in : uin_p.i -> uin_n.i;
        i_out : uout_p.i -> uout_n.i;
    end

    equations
        let

        in
            u_in == uin_p.v - uin_n.v;
            u_out == uout_p.v - uout_n.v;

            u_out == scale * u_in;
            i_in == -scale * i_out;

        end
    end
end
