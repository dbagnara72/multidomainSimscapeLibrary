component gear
% gear 
%
% w_1.der == -(b_theta+b1)/J1*w_1 + b_theta/J1*w_2 - t_theta/J1 + t_1/J1;
% 
% w_2.der == b_theta/J2*w_1 - (b_theta+b2)/J2*w_2 + t_theta/J2 + t_2/J2;
% 
% t_theta.der == k_theta*(w_1 - w_2);
% 
% tau_theta == t_theta;
%     
nodes
    S1 = foundation.mechanical.rotational.rotational; % S1:left
    S2 = foundation.mechanical.rotational.rotational; % S2:right
end

outputs
    tau_theta_1 = { 0, 'N*m' }; % tau_theta_1
    tau_theta_2 = { 0, 'N*m' }; % tau_theta_2
    w1 = { 0, 'rad/s' }; % w1
    w2 = { 0, 'rad/s' }; % w2
end
parameters
    n1 = { 41.4, '1'};       % n1
    n2 = { 1, '1'};       % n2
    b1 = { 0.02, '(N*m)*(s/rad)'};       % b1
    J1 = { 0.025, 'kg*m^2' };        % J1
    b2 = { 35, '(N*m)*(s/rad)'};       % b2
    J2 = { 2, 'kg*m^2' };        % J2
    k_theta_1 = { 1e4, 'N*m/rad' };   % k_theta_1
end

variables
    w_1 = { 0, 'rad/s' };           % w1
    w_2 = { 0, 'rad/s' };           % w2
    t_1 = { 0, 'N*m' };             % tau_1
    t_2 = { 0, 'N*m' };             % tau_2
    t_theta_1 = { 0, 'N*m' };         % tau_theta_1
    t_theta_2 = { 0, 'N*m' };         % tau_theta_2
end

branches
    t_1 : S1.t ->*;    
    t_2 : S2.t ->*;    
end

equations
    w_1 == S1.w;
    w_2 == S2.w;

    J1*w_1.der == -b1*w_1 - t_theta_1 + t_1;
    J2*w_2.der == - b2*w_2 + t_theta_2 + t_2;
    t_theta_1.der == k_theta_1*(w_1 - w_2*n1/n2);
    t_theta_2 == t_theta_1*n1/n2;
    
    % outputs
    w1 == w_1;
    w2 == w_2;
    tau_theta_1 == t_theta_1;
    tau_theta_2 == t_theta_2;
end
% annotations
%     Icon = 'msm.jpg';
% end
end