component check_valve
% check valve

outputs
    xout = {0, 'mm'};      % x:right
    qout = {0, 'l/min'};      % q:right
    dpout = {0, 'bar'};      % dp:right
end

nodes
    A = foundation.hydraulic.hydraulic; % A:left
    B = foundation.hydraulic.hydraulic; % B:left
end

parameters                        
    x_max = { 2.75, 'mm' };     % Maximum open orifice
    pref = { 25, 'bar'};         % Pressure reference
end

parameters(Access=private)
    delta_x = { 0.01, 'mm'};          
    bh = { 1e12, 'N*s/m'};  
    m = { 0.025, 'kg'}; 
    k = { 1, 'N/m' };                  
    b = { 1, 'N*s/m'};    
    Av = { 1, 'm^2'};  
end

variables
    pA = { 0, 'bar'};       % pA
    pB = { 0, 'bar'};       % pB    
    dp = { 0, 'bar'};       % dp    
    q = { 0, 'm^3/s'};      % q
    x = { 0, 'm'};          % x
    v = { 0, 'm/s'};        % v
end

branches
    q : B.q -> A.q;
end

equations
    let
        rho = A.density;
        bulk = A.bulk;
    in     
        pA == A.p;
        pB == B.p; 
        dp == 0.5*(abs(pB-pA)+pB-pA);
        q == (x)*x_max*sqrt(2/rho)*sqrt(abs(dp));
            if x > x_max
                v.der == 1/m*(Av*dp-bh*v-k*x);
                x.der == v;
            elseif x < 0
                v.der == 1/m*(Av*dp-bh*v-k*x);
                x.der == v;
            else
                v.der == 1/m*(Av*dp-b*v-k*x);
                x.der == v;
            end
        x == xout;
        q == qout;
        dp == dpout;
    end
end
end
