component variable_displacement_motor
% Variable displacement motor


inputs
    Vd = {0, '1'}; % Vd:left
end

nodes
    C = foundation.mechanical.rotational.rotational; % C:right
    A = foundation.hydraulic.hydraulic; % A:left
    B = foundation.hydraulic.hydraulic; % B:left    
end
outputs
    q_out = {0, 'l/min'}; % q:right
    delta_p_out = {0, 'bar'}; % dp:right
end

variables 
    t = { 0, 'N*m' };               % Torque through
    q = {0 , 'm^3/s'};              % Volumetric flow through A line
    qt = {0 , 'm^3/s'};             % Volumetric flow through B line
    qleak = {0 , 'm^3/s'};          % Volumetric flow leakage
    Dv = {0 , 'cm^3/rev'};          % Volumetric displacement
    dp = {0 ,'Pa'};                 % Delta Pressure
    wm = {0 ,'rad/s'};              % Mechanical speed
end

parameters

end

parameters
    max_Dv = {252.8, 'cm^3/rev'};               % Maximum allowed volumetric displacement
    min_Dv = {50, 'cm^3/rev'};                  % Minimum allowed volumetric displacement
    inertia_motor = {0.0402, 'kg*m^2'};         % Mass moment of Inertia of rotating components
    oil_vol = {4.1, 'l'};                       % Oil volume
    bp = { 1, '(N*m)*s/rad' };                % Mechanical friction
    lk = { 1e-6, 'm' };                         % Flow leakage (orifice)
end

branches
    q: A.q -> *;
    t: C.t -> *;
    qt: B.q -> *;
end

equations 
    let
        rho = A.density;
        bulk = A.bulk;
    in
        C.w == wm;
        Dv == Vd*max_Dv;
        A.p - B.p == -dp;
        qleak == (lk)*lk*sqrt(2/rho)*sqrt(abs(dp))*sign(dp)

        wm.der == (t + dp*Dv  - bp*wm)/inertia_motor; 
        -q == wm*Dv - qleak + dp.der*oil_vol/bulk;
        qt == - q; 
        q_out == q;
        delta_p_out == -dp;
    end
end


end
