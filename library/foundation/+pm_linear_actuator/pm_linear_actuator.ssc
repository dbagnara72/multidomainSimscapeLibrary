component pm_linear_actuator
% pmlinear_actuator

inputs
    uc = { 0, 'V' }; % uc:left
end

outputs
    xv_out = { 0, 'mm' }; % xv:right
%     ic_out = { 0, 'A' }; % ic:right
end

parameters
    Bm = { 1, 'V*s/m^2' };       % Permanent Magnet Flow
    mv = { 0.05, 'kg' };         % Valve mass
    Lc = { 0.01, 'H'};           % Coil Inductance
    Rc = { 10, 'Ohm'};         % Coil Resistance
    bv = { 2000, 'N*s/m'};       % valve Damping
    h = { 0.05, 'm'};            % Coil length
    xv_max = { 2.75, 'mm'};      % maximum valve opening
    n = { 1000, '1'};              % Number of spire
end

variables
    ic = {value = { 0, 'A'}, priority = priority.high};          % i
    vv = { 0, 'm/s'};                                           % vv
    xv = { 0, 'mm'};                                             % xv
end
    
equations
    if uc > 0
            if xv > xv_max
                xv.der == 0;
                vv.der == 0;
                ic.der == -Rc/Lc*ic + 1/Lc*uc;
            else
                xv.der == vv;
                vv.der == Bm*h*n/mv*ic-bv/mv*vv;
                ic.der == -Rc/Lc*ic-Bm*n/Lc*h*vv+1/Lc*uc;
            end
    elseif uc < 0
            if xv < -xv_max
                xv.der == 0;
                vv.der == 0;
                ic.der == -Rc/Lc*ic+1/Lc*uc;
            else
                xv.der == vv;
                vv.der == Bm*h*n/mv*ic-bv/mv*vv;
                ic.der == -Rc/Lc*ic-Bm*n/Lc*h*vv+1/Lc*uc;
            end
    else
            xv.der == vv;
            vv.der == Bm*h*n/mv*ic-bv/mv*vv;
            ic.der == -Rc/Lc*ic-Bm*n/Lc*h*vv+1/Lc*uc;
    end
%     ic_out == ic;
    xv == xv_out;
end
% annotations
%     Icon = 'spool_valve_actuator.jpg';
% end
end
