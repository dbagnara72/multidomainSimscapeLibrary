component pressure_controlled_pump
 % Pressure controlled pump


nodes
    cW = foundation.mechanical.rotational.rotational; % cW:left
    cA = foundation.hydraulic.hydraulic; % cA:right
    cB = foundation.hydraulic.hydraulic; % cB:right
end

inputs
    dp_ref = {0, 'bar' };          % Pressure set-point
end

outputs
    qleak = {0,'l/min'};
    taup = {0,'N*m'};
    vdi = {0,'1'};
    pflow = {0,'l/min'};
end

variables
    te = { 0, 'N*m' };               % Torque from engine
    qA = {0 , 'm^3/s'};             % Volumetric flow through A line
    qB = {0 , 'm^3/s'};             % Volumetric flow through B line
    qd = {0 , 'm^3/s'};             % Volumetric flow drain for pressure control
    dp = {0 , 'Pa'};                % Differential Pressure
    vd = {0 , '1'};                 % Volumetric displacement pu
    vd_i = {0 , '1'};               % Volumetric displacement pu integral term
    we = {0 , 'rad/s'};             % Engine Speed
end

variables(Access=private) 
    x1 = { 0, 'm*s^2' };            % state variable of the second order filter as model of the relef valve
    x2 = { 0, 'm*s' };              % state variable of the second order filter as model of the relef valve
    x_rv = { 0, 'm' };              % pressure measure of the relef valve
    x_rv_flt = { 0, 'm' };          % pressure measure of the relef valve
end

branches
    qA: cA.q -> *;
    te: cW.t -> *;
    qB: cB.q -> *;
end

parameters
    Vd_nom = {62.3, 'cm^3' };           % Nominal Volumetric Displacement Pump
    pnom = { 250, 'bar' };                  % Nominal Pressure
    b = { 0.124, '(N*m)*s/rad'};            % Friction coefficient
    inertia_pump = {0.027, 'kg*m^2'};       % Mass moment of Inertia of rotating components
    vd_lim_max = { 0.98, '1' };             % Vol. displ. max lim.
    vd_lim_min = { -0.98, '1' };            % Vol. displ. min lim.
    p_set = {258, 'bar'};                   % Relief valve pressure setting
    p_reg = {12, 'bar'};                    % Relief valve regulation range
    x_rv_max = {32.0, 'mm'};                % Relief valve maximum orifice
    kpc = {8, '1' };                        % Proportional Gain
    kic = {8, '1/s' };                      % Integral Gain
end
parameters(Access=private) 
    a0 = {(2*pi*100)^2, '1/s^2'}                % Throttle model parameter wn^2
    a1 = {(2*2*pi*100), '1/s'}                  % Throttle model parameter 2*zeta*wn
    oil_vol = {3.0, 'l'};                       % Oil volume
    leak = {5e-12, 'm^3/s/Pa'};                 % Leakage factor
    eta_mech = { 0.909, '1' };                  % Mechanical efficiency
    eta_vol = { 0.959, '1' };                   % Volumetric efficiency    
%     eta_mech = { 1, '1' };                  % Mechanical efficiency
%     eta_vol = { 1, '1' };                   % Volumetric efficiency
end

equations
    let
        e = (dp_ref/pnom - dp/pnom);
        k = x_rv_max/p_reg;
        p_max = p_set + p_reg;
        kq = x_rv_max*sqrt(2.0/cA.density*pnom);
        kc = x_rv_max/sqrt(2.0*cA.density*pnom);
    in   
        if dp >= p_max
            x_rv == x_rv_max;
        elseif dp <= p_set
            x_rv == 0;
        else
            x_rv == k*(dp - p_set);
        end
       x1.der == x2;
       x2.der == -a0 * x1 - a1 * x2 + x_rv;
       x_rv_flt == a0 * x1;
       
      if (vd > vd_lim_max) && (e > 0)
        vd_i.der == 0;
        vd == vd_i;
      elseif (vd < vd_lim_min) && (e < 0)
        vd_i.der == 0;
        vd == vd_i;
      else
        vd_i.der == kic * e;
        vd == kpc * e + vd_i; 
      end
      
      cA.p - cB.p == dp;
      we == cW.w;
      
      qd == dp*leak + x_rv*kq;      
      we.der == (te - dp*vd*Vd_nom - we*b)/inertia_pump; 
      qA == -we*Vd_nom*vd + dp.der*oil_vol/cA.bulk + qd;
      qB == we*Vd_nom*vd;
     
      % outputs
      qleak == qd;
      taup == te;
      vdi == vd;
      pflow == -we*Vd_nom*vd*eta_vol;
    end
end
% annotations
%     Icon = 'eaton.jpg';
% end
end






